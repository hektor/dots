{
  /**
   * Linting & (Auto)formatting
   */

  "prettier.semi": false,
  "prettier.tabWidth": 2,
  "prettier.singleQuote": true,
  "prettier.arrowParens": "avoid",
  "prettier.printWidth": 120,
  "eslint.format.enable": true,
  "coc.preferences.formatOnType": true,
  "coc.preferences.formatOnSave": true,

  // Markdown
  "markdownlint.config": {
    "heading-style": {
      "style": "atx"
    },
    "ul-style": {
      "style": "asterisk"
    }
  },

  /**
   * Language server & diagnostics
   */

  // Language server
  "languageserver": {
    // "racket": {
    //   "command": "racket",
    //   "args": ["--lib", "racket-langserver"],
    //   "filetypes": ["scheme", "racket"]
    // }
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "args": ["--stdio"],
      "filetypes": ["dockerfile"]
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
      "filetypes": ["haskell", "lhaskell"],
      "settings": {
        "haskell": {
          "formattingProvider": "stylish-haskell"
        }
      }
      // Run `haskell-language-server-wrapper generate-default-config` for a defult config
      // "settings": { ... }
    },
    "R": {
      "enable": true,
      "command": "/usr/bin/R",
      "args": ["--slave", "-e", "languageserver::run()"],
      "filetypes": ["r"]
    },
    "prolog-lsp": {
      "command": "swipl",
      "args": ["-g", "use_module(library(lsp_server)).", "-g", "lsp_server:main", "-t", "halt", "--", "stdio"],
      "filetypes": ["prolog"]
    }
  },
  "jedi.workspace.extraPaths": [
    "/home/h/.local/lib/python3.8/site-packages",
    "/home/h/.local/lib/python3.9/site-packages",
    "/home/h/.local/lib/python3.10/site-packages",
    "/home/h/.conda/envs/ml-2223/lib/python3.10/site-packages",
    "/home/h/.conda/envs/nlp-2223/lib/python3.10/site-packages"
  ],

  // Diagnostics
  "diagnostic.infoSign": "ðŸ›ˆ",
  "diagnostic-languageserver.filetypes": {
    "python": "pylint",
    "systemd": "systemd-analyze"
  },
  "diagnostic-languageserver.linters": {
    "pylint": {
      "sourceName": "pylint",
      "command": "pylint",
      "debounce": 100,
      "args": [
        "--output-format",
        "text",
        "--score",
        "no",
        "--msg-template",
        "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
        "%file"
      ],
      "formatPattern": [
        "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
        {
          "line": 1,
          "column": 2,
          "endColumn": 2,
          "security": 3,
          "message": 4
        }
      ],
      "rootPatterns": ["pyproject.toml", "setup.py", ".git"],
      "securities": {
        "informational": "hint",
        "refactor": "info",
        "convention": "info",
        "warning": "warning",
        "error": "error",
        "fatal": "error"
      },
      "offsetColumn": 1,
      "offsetColumnEnd": 1,
      "formatLines": 1
    }
  },
  // Set up autopep8
  "diagnostic-languageserver.formatters": {
    "autopep8": {
      "command": "autopep8",
      "args": ["-"]
    }
  },
  "diagnostic-languageserver.formatFiletypes": {
    "python": "autopep8"
  },

  /**
   * Autocompletion, suggestions, snippets
   */

  "suggest.autoTrigger": "trigger",
  "suggest.snippetIndicator": "â–¸",
  "signature.target": "float",
  "snippets.userSnippetsDirectory": "~/.vim/snips/",
  "coc.source.file.triggerCharacters": ["/"],

  // ECMAScript, TypeScript
  "emmet.includeLanguages": { "javascript": "javascriptreact" },
  "javascript.suggestionActions.enabled": true,
  "typescript.suggestionActions.enabled": true,
  "svelte.plugin.typescript.diagnostics.enable": true,
  "svelte.enable-ts-plugin": true,

  // Add BibTex file for coc-bibtex autocompletion
  "list.source.bibtex.files": ["~/.zk/references.bib", "./*.bib"],
  "bibtex.silent": true,

  // Adjust floating menus
  "hover.floatConfig": {
    "border": true,
    "highlight": "Normal"
  },
  "signature.floatConfig": {
    "border": true,
    "highlight": "Normal"
  },
  "diagnostic.floatConfig": {
    "border": true,
    "highlight": "Normal"
  },
  "suggest.pumFloatConfig": {
    "border": true,
    "highlight": "Normal"
  },

}
